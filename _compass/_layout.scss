body {
	@include container($max-width);
	position: relative;
}

/********* 
Nav styles
*********/

nav {
	background: url(../images/background.jpg) repeat;
	background-size: cover;
	background-position: center center;
	@include breakpoint($nav-picture-width) {
		background-size: auto auto;
	}//media query
}//.nav

.nav-outer-wrapper {
	padding: rhythm(2) $body-padding;
	position: relative;
	z-index: 1;
	@include background-gradient();
}

.engineer {
	.nav-outer-wrapper {
		@include background-gradient($color: $engineer-nav-background);
	}
}

.nav-wrapper {
 	max-width: $nav-max-width;
	margin: 0 auto;
}

.nav-social {
	ul {
		display: relative;
	}//ul
	li {
		@include clearfix;
		width: 200px;
		margin-left: span(5);
		span {
			display: block;
			float: left;
		}//span
		.username {
			margin-left: em(10px);
		}//username
	}//li
}//.nav-social

svg {
	width: $social-icon-size;
	height: $social-icon-size;
	stroke: $alt-text-color;
	fill: $alt-text-color;
	position: relative;
	top: 6px;
}

/********* 
End nav styles
*********/

/********* 
Define padding using the resp-horiz-padding mixin. By avoiding application
of padding to one container element, other elements, such as images, can 
extend to edge of window.
Padding controls left margin for small screens. For larger screens, left 
margins are set elsewhere.
.read-more class needs margins to be set in addition to padding
.read-more-button padding has to be set using margin rules
*********/


.home-main {
	@include resp-horiz-padding($breakpoint-1: $max-header-width + 100px);
}

.engineer-main {
	header, .text-container, figcaption {
		@include resp-horiz-padding($breakpoint-1: $max-header-width + 100px);
	}
}

.read-more {
	@include resp-horiz-padding();
	margin-left: $body-padding;
	margin-right: $body-padding;
	
}

.read-more-button {
	margin-left: $body-padding;
}

/********* 
End padding
*********/


/********* 
header (meant for engineer page): set maximum width
*********/

header { 
	max-width: $max-header-width;
}

/********* 
.text-container class controls maximum text width for articles
in engineer page, while letting images have a longer width
.text-container 
*********/

.text-container {
	max-width: $max-text-width;
	p, h3, h4 {
		@include breakpoint($max-header-width) {
			margin-left: span(1);
		}
	}
}

/********* 
Set margins for header element, .text-container class and .read-more-button.
The goal is to have the left-margin of these two sets of elements be aligned
Left margin starts at 0, increases to one column, then to two columns
*********/

header, .text-container, .read-more-button {
	@include breakpoint($max-text-width + 100px) {
		margin-left: span(1);
	}	
	@include breakpoint($max-text-width + 300px) {
		margin-left: span(2);
	}
	@include breakpoint($desktop) {
		margin-left: span(3);
	}
}

figcaption {
	@include breakpoint($max-header-width + 100px) {
		margin-left: span(1);
	}	
}

#main {
	ul {
		margin-left: span(1);
		@include breakpoint($max-header-width) {
			margin-left: span(2);
		}
	}
}


/********* 
set styles for .text-container and figure inside of .floated 
class to float text to the left and images to the right
*********/

.floated {
	.text-container {
		@extend %resp-float-left-half;
	}
	figure {
		@extend %resp-float-right-half;
	}

%resp-float-left-half {
	@include breakpoint($laptop) {
		float: left;
		width: span(6 of 13);
		margin-left: gutter(12);
	}
}

%resp-float-right-half {
	@include breakpoint($laptop) {
		float: right;
		width: span(6 of 13);
		margin-right: gutter(12);
	}
}

/** max-width of floated images has to be limited to 100% of its column **/
	img {
		max-width: span(12);
	}
}//.floated


.floated {
	.read-more-button {
		@include breakpoint($laptop) {
			margin-top: rhythm(5);
			margin-left: gutter(24) + span(1 of 24);
		}
	}
}


/********* 
set .home-post width
*********/

.home-post {
	max-width: $max-text-width;
	margin: 0 auto;
}

/********* 
pictures layout
*********/


figure {
	margin-top: rhythm(3);
	margin-left: auto;
	margin-right: auto;
}

.full-width {
	max-width: $max-picture-width;
}




